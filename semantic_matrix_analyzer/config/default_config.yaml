analysis:
  keys:
    error_indicators:
    - error
    - exception
    - fail
    - invalid
    - wrong
    intent_indicators:
    - purpose
    - goal
    - objective
    - aim
    - intent
  patterns:
    backend_agnostic_io:
      FileManager: A class that provides a unified interface for file operations across
        different storage backends (disk, memory, zarr)
      backend_parameter: The backend parameter should always be the last positional
        argument in FileManager methods
      path_validation: Path parameters should be validated to ensure they are of type
        str or Path
    code_structure:
      max_class_length: 500
      max_complexity: 10
      max_function_length: 100
      max_line_length: 88
    naming_conventions:
      class: ^[A-Z][a-zA-Z0-9]*$
      constant: ^[A-Z][A-Z0-9_]*$
      function: ^[a-z][a-zA-Z0-9_]*$
      variable: ^[a-z][a-zA-Z0-9_]*$
  tokens:
    docstring_tags:
    - param
    - return
    - raises
    - yields
    - example
    special_markers:
    - TODO
    - FIXME
    - NOTE
    - WARNING
  weights:
    docstring_relevance: 0.6
    import_dependency: 0.5
    name_similarity: 0.7
    structural_coherence: 0.9
    type_compatibility: 0.8
output:
  default_format: markdown
  formats:
  - text
  - markdown
  - json
  verbosity: 2
visualization:
  colors:
    high_confidence: '#4CAF50'
    low_confidence: '#F44336'
    medium_confidence: '#FFC107'
  thresholds:
    high_confidence: 0.8
    medium_confidence: 0.5
